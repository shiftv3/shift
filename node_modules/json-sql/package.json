{
  "_args": [
    [
      "json-sql@https://github.com/shiftv3/json-sql/tarball/master",
      "/home/joey/shift"
    ]
  ],
  "_from": "https://github.com/shiftv3/json-sql/tarball/master",
  "_id": "json-sql@0.3.8",
  "_inCache": true,
  "_installable": true,
  "_location": "/json-sql",
  "_phantomChildren": {},
  "_requested": {
    "name": "json-sql",
    "raw": "json-sql@https://github.com/shiftv3/json-sql/tarball/master",
    "rawSpec": "https://github.com/shiftv3/json-sql/tarball/master",
    "scope": null,
    "spec": "https://github.com/shiftv3/json-sql/tarball/master",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://github.com/shiftv3/json-sql/tarball/master",
  "_shasum": "2712701b5fb53f215b5574af4f29c23f96afb89c",
  "_shrinkwrap": null,
  "_spec": "json-sql@https://github.com/shiftv3/json-sql/tarball/master",
  "_where": "/home/joey/shift",
  "author": {
    "email": "artzhuchka@gmail.com",
    "name": "Artem Zhukov"
  },
  "bugs": {
    "url": "https://github.com/2do2go/json-sql/issues"
  },
  "dependencies": {
    "underscore": "1.8.2"
  },
  "description": "node.js json to sql queries mapper",
  "devDependencies": {
    "chai": "2.2.0",
    "gulp": "^3.8.11",
    "gulp-istanbul": "^0.10.0",
    "gulp-jshint": "^1.10.0",
    "gulp-mocha": "^2.0.1"
  },
  "homepage": "https://github.com/2do2go/json-sql#readme",
  "keywords": [
    "database",
    "db",
    "json",
    "json-sql",
    "mapper",
    "odm",
    "sql"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "name": "json-sql",
  "optionalDependencies": {},
  "readme": "# JSON-SQL\n\nNode.js library for mapping mongo-style query objects to SQL queries.\n\n## Quick Start\n\nInstall it with NPM or add it to your package.json:\n\n``` bash\n$ npm install json-sql\n```\n\nThen:\n\n``` js\nvar jsonSql = require('json-sql')();\n\nvar sql = jsonSql.build({\n\ttype: 'select',\n\ttable: 'users',\n\tfields: ['name', 'age'],\n\tcondition: {name: 'Max', id: 6}\n});\n\nsql.query\n// sql string:\n// select name, age from users where name = $p1 && id = 6;\n\nsql.values\n// hash of values:\n// { p1: 'Max' }\n```\n\n## Documentation\n\nDocumentation is available at the [./docs directory](./docs).\n\n## Examples\n\n__Select with join:__\n\n``` js\nvar sql = jsonSql.build({\n\ttype: 'select',\n\ttable: 'users',\n\tjoin: {\n\t\tdocuments: {\n\t\t\ton: {'user.id': 'documents.userId'}\n\t\t}\n\t}\n});\n\nsql.query\n// select * from users join documents on user.id = documents.userId;\n\nsql.values\n// {}\n```\n\n__Insert:__\n\n``` js\nvar sql = jsonSql.build({\n\ttype: 'insert',\n\ttable: 'users',\n\tvalues: {\n\t\tname: 'John',\n\t\tlastname: 'Snow',\n\t\tage: 24,\n\t\tgender: 'male'\n\t}\n});\n\nsql.query\n// insert into users (name, lastname, age, gender) values ($p1, $p2, 24, $p3);\n\nsql.values\n// { p1: 'John', p2: 'Snow', p3: 'male' }\n```\n\n__Update:__\n\n``` js\nvar sql = jsonSql.build({\n\ttype: 'update',\n\ttable: 'users',\n\tcondition: {\n\t\tid: 5\n\t},\n\tmodifier: {\n\t\trole: 'admin'\n\t\tage: 33\n\t}\n});\n\nsql.query\n// update users set role = $p1, age = 33 where id = 5;\n\nsql.values\n// { p1: 'admin' }\n```\n\n__Remove:__\n\n``` js\nvar sql = jsonSql.build({\n\ttype: 'remove',\n\ttable: 'users',\n\tcondition: {\n\t\tid: 5\n\t}\n});\n\nsql.query\n// delete from users where id = 5;\n\nsql.values\n// {}\n```\n\nFor more examples, take a look at the [./docs directory](./docs) or [./tests directory](./tests).\n\n## Tests\n\nClone repository from github, `cd` into cloned dir and install dev dependencies:\n\n``` bash\n$ npm install\n```\n\nThen run tests with command:\n\n``` bash\n$ gulp test\n```\n\nOr run tests coverage with command:\n\n``` bash\n$ gulp coverage\n```\n\n## License\n\n[MIT](./LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/2do2go/json-sql.git"
  },
  "version": "0.3.8"
}
